name: Github Pages Deploy

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    name: Install and Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # cache node_modules
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('pnpm-lock.yaml') }}

      - name: Install dependency and build
        run: |
          corepack enable
          pnpm i
          pnpm build

      - name: Upload GhPages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./site/.vitepress/dist

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: ./site/.vitepress/dist
          retention-days: 1

  deploy-github-pages:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy Github Pages
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  deploy-edgeone:
    needs: build
    runs-on: ubuntu-latest
    name: Deploy Tencent EdgeOne
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.11.0 # 选择适合的 Node.js 版本

      - name: Install EdgeOne CLi
        run:
          npm install -g edgeone

      - name: Deploy to EdgeOne Pages
        run: npx edgeone pages deploy ./dist -n candystore -t ${{ secrets.EDGEONE_API_TOKEN }} [-e <env>]
        env:
          EDGEONE_API_TOKEN: ${{ secrets.EDGEONE_API_TOKEN }}

  # deploy-cloudbase:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   name: Deploy Cloudbase
  #   steps:
  #     - name: Cache node modules
  #       id: cache-npm
  #       uses: actions/cache@v3
  #       env:
  #         cache-name: cache-node-modules
  #       with:
  #         # npm cache files are stored in `~/.npm` on Linux/macOS
  #         path: ~/.npm
  #         key: cloudbase-cli
  #         restore-keys: cloudbase-cli

  #     - name: Download Artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: dist
  #         path: ./dist

  #     - name: Push to Cloudbase
  #       uses: dustella/tcb-actions@4f28fbf9a6f35919ca4d5e98233ed9f0f58a4039
  #       with:
  #         secret-id: ${{ secrets.SID }}
  #         secret-key: ${{ secrets.SKEY }}
  #         env-id: ${{ secrets.ENVID }}
  #         dist: ./dist

  #   run: |
  #     npm install -g @cloudbase/cli
  #     npx tcb login --apiKeyId  ${{SECRETS.SID}} --apiKey ${{SECRETS.SKEY}}
  #     npx tcb hosting deploy ./dist . -e  ${{SECRETS.ENVID}}
